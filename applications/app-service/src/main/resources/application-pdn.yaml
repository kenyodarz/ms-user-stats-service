server:
  port: 8080
  servlet:
    context-path: "/api"

spring:
  application:
    name: "ms-muebles-sas"
  rabbitmq:
    uri: ${RABBITMQ_URI:amqps://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}/${RABBITMQ_VHOST}}

    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    virtual-host: ${RABBITMQ_VHOST}

    connection-timeout: ${RABBITMQ_CONNECTION_TIMEOUT:60000}
    requested-heartbeat: ${RABBITMQ_HEARTBEAT:60}

    listener:
      simple:
        concurrency: ${RABBITMQ_CONCURRENCY:1}
        max-concurrency: ${RABBITMQ_MAX_CONCURRENCY:10}
        retry:
          enabled: ${RABBITMQ_LISTENER_RETRY_ENABLED:true}
          initial-interval: ${RABBITMQ_LISTENER_RETRY_INITIAL_INTERVAL:1000}
          max-attempts: ${RABBITMQ_LISTENER_RETRY_MAX_ATTEMPTS:3}
          max-interval: ${RABBITMQ_LISTENER_RETRY_MAX_INTERVAL:10000}
          multiplier: ${RABBITMQ_LISTENER_RETRY_MULTIPLIER:1.0}

    template:
      retry:
        enabled: ${RABBITMQ_TEMPLATE_RETRY_ENABLED:true}
        initial-interval: ${RABBITMQ_TEMPLATE_RETRY_INITIAL_INTERVAL:1000}
        max-attempts: ${RABBITMQ_TEMPLATE_RETRY_MAX_ATTEMPTS:3}
        max-interval: ${RABBITMQ_TEMPLATE_RETRY_MAX_INTERVAL:10000}
        multiplier: ${RABBITMQ_TEMPLATE_RETRY_MULTIPLIER:1.0}
  cloud:
    stream:
      bindings:
        domainEvents-out-0:
          destination: event.stats.validated
      rabbit:
        bindings:
          domainEvents-out-0:
            producer:
              routing-key-expression: '''event.stats.validated'''
    function:
      definition: domainEvents
  devtools:
    add-properties: false
  h2:
    console:
      enabled: false

aws:
  region: ${AWS_REGION:us-east-1}
  dynamodb:
    endpoint: ${AWS_DYNAMODB_ENDPOINT:https://dynamodb.us-east-1.amazonaws.com}
    access-key-id: ${AWS_ACCESS_KEY_ID}
    secret-access-key: ${AWS_SECRET_ACCESS_KEY}


rabbitmq:
  host: ${RABBITMQ_HOST}
  port: ${RABBITMQ_PORT:5671}
  username: ${RABBITMQ_USERNAME}
  password: ${RABBITMQ_PASSWORD}
  virtual-host: ${RABBITMQ_USERNAME}
  queue: ${RABBITMQ_QUEUE:event.stats.validated}

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
